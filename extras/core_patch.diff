Index: t3lib/class.t3lib_beuserauth.php
===================================================================
--- t3lib/class.t3lib_beuserauth.php	(revision 5312)
+++ t3lib/class.t3lib_beuserauth.php	(working copy)
@@ -96,7 +96,6 @@
 	var $formfield_uident = 'userident'; 		// formfield with password
 	var $formfield_chalvalue = 'challenge';		// formfield with a unique value which is used to encrypt the password and username
 	var $formfield_status = 'login_status'; 	// formfield with status: *'login', 'logout'
-	var $security_level = 'superchallenged';	// sets the level of security. *'normal' = clear-text. 'challenged' = hashed password/username from form in $formfield_uident. 'superchallenged' = hashed password hashed again with username.
 
 	var $writeStdLog = 1;					// Decides if the writelog() function is called at login and logout
 	var $writeAttemptLog = 1;				// If the writelog() functions is called if a login-attempt has be tried without success
@@ -140,6 +139,18 @@
 
 
 	/**
+	 * Sets the security level for the Backend login
+	 *
+	 * @return	void
+	 */
+	function start() {
+		$securityLevel = trim($GLOBALS['TYPO3_CONF_VARS']['BE']['loginSecurityLevel']);
+		$this->security_level = $securityLevel ? $securityLevel : 'superchallenged';
+
+		parent::start();
+	}
+
+	/**
 	 * If flag is set and the extensions 'beuser_tracking' is loaded, this will insert a table row with the REQUEST_URI of current script - thus tracking the scripts the backend users uses...
 	 * This function works ONLY with the "beuser_tracking" extension and is deprecated since it does nothing useful.
 	 *
Index: t3lib/class.t3lib_userauth.php
===================================================================
--- t3lib/class.t3lib_userauth.php	(revision 5312)
+++ t3lib/class.t3lib_userauth.php	(working copy)
@@ -199,7 +199,13 @@
 		$this->loginType = ($this->name=='fe_typo_user') ? 'FE' : 'BE';
 
 			// set level to normal if not already set
-		$this->security_level = $this->security_level ? $this->security_level : 'normal';
+		if (!$this->security_level) {
+			// Note: we use 'TYPO3_MODE' here because this is what $TYPO3_CONF_VARS uses
+			$this->security_level = trim($TYPO3_CONF_VARS[TYPO3_MODE]['loginSecurityLevel']);
+			if (!$this->security_level) {
+				$this->security_level = 'normal';
+			}
+		}
 
 			// enable dev logging if set
 		if ($TYPO3_CONF_VARS['SC_OPTIONS']['t3lib/class.t3lib_userauth.php']['writeDevLog']) $this->writeDevLog = TRUE;
@@ -332,6 +338,7 @@
 		if ((rand()%100) <= $this->gc_probability)	{
 			$this->gc();
 		}
+
 	}
 
 	/**
Index: typo3/index.php
===================================================================
--- typo3/index.php	(revision 5312)
+++ typo3/index.php	(working copy)
@@ -355,7 +355,7 @@
 		if ($BE_USER->user['uid'] && ($this->commandLI || $this->loginRefresh || !$this->interfaceSelector))	{
 
 				// If no cookie has been set previously we tell people that this is a problem. This assumes that a cookie-setting script (like this one) has been hit at least once prior to this instance.
- 			if (!$_COOKIE[$BE_USER->name])	{
+			if (!$_COOKIE[$BE_USER->name])	{
 				if ($this->commandLI=='setCookie') {
 						// we tried it a second time but still no cookie
 						// 26/4 2005: This does not work anymore, because the saving of challenge values in $_SESSION means the system will act as if the password was wrong.
@@ -370,7 +370,7 @@
 			if ($redirectToURL = (string)$BE_USER->getTSConfigVal('auth.BE.redirectToURL')) {
 				$this->redirectToURL = $redirectToURL;
 				$this->GPinterface = '';
- 			}
+			}
 
 				// store interface
 			$BE_USER->uc['interfaceSetup'] = $this->GPinterface;
@@ -589,21 +589,35 @@
 	function startForm()	{
 		$output = '';
 
-		if ($this->loginSecurityLevel == 'challenged') {
-			$output.= '
-				<form action="index.php" method="post" name="loginform" onsubmit="doChallengeResponse(0);">
-				';
-		} elseif ($this->loginSecurityLevel == 'normal') {
-			$output.= '
-				<form action="index.php" method="post" name="loginform" onsubmit="document.loginform.userident.value=document.loginform.p_field.value;document.loginform.p_field.value=\'\';return true;">
-				';
-		} else { // if ($this->loginSecurityLevel == 'superchallenged') {
-			$output.= '
-				<form action="index.php" method="post" name="loginform" onsubmit="doChallengeResponse(1);">
-				';
+		// The form defaults to superchallenged
+		$form = '<form action="index.php" method="post" name="loginform" onsubmit="doChallengeResponse(1);">';
+		switch ($this->loginSecurityLevel) {
+			case 'challenged':
+				$form = '<form action="index.php" method="post" name="loginform" onsubmit="doChallengeResponse(0);">';
+				break;
+			case 'normal':
+				$form = '<form action="index.php" method="post" name="loginform" onsubmit="document.loginform.userident.value=document.loginform.p_field.value;document.loginform.p_field.value=\'\';return true;">';
+				break;
+			case 'superchallenged':
+			case '':
+				// Do nothing. These cases only prevent us from falling to 'default'
+				break;
+			default:
+				// Call hooks. If they do not return anything, we stay with superchallendged
+				if (is_array($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['typo3/index.php']['loginFormHook'])) {
+					foreach ($GLOBALS['TYPO3_CONF_VARS']['SC_OPTIONS']['typo3/index.php']['loginFormHook'] as $function) {
+						$params = array();
+						$formCode = t3lib_div::callUserFunction($function, $params, $this);
+						if ($formCode) {
+							$form = $formCode;
+							break;
+						}
+					}
+				}
+
 		}
 
-		$output.= '
+		$output.= $form . '
 					<input type="hidden" name="login_status" value="login" />
 				';
 
